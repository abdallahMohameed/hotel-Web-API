// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hotel_Web_API.Data;

#nullable disable

namespace hotelWebAPI.Migrations
{
    [DbContext(typeof(hotel_DB_Context))]
    [Migration("20221223041338_fix")]
    partial class fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hotel_Web_API.models.Room", b =>
                {
                    b.Property<int>("roomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roomId"));

                    b.Property<int>("PricePerDay")
                        .HasColumnType("int");

                    b.Property<int>("branchId")
                        .HasColumnType("int");

                    b.Property<string>("roomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roomId");

                    b.HasIndex("branchId");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("hotel_Web_API.models.booking", b =>
                {
                    b.Property<int>("bookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookingId"));

                    b.Property<int>("totalPrice")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("bookingId");

                    b.HasIndex("userId");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("hotel_Web_API.models.branch", b =>
                {
                    b.Property<int>("branchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("branchId"));

                    b.Property<string>("locationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("branchId");

                    b.ToTable("branches");
                });

            modelBuilder.Entity("hotel_Web_API.models.roomBooking", b =>
                {
                    b.Property<int>("RoombookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoombookingId"));

                    b.Property<DateTime>("bookingFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("bookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("bookingTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("roomId")
                        .HasColumnType("int");

                    b.HasKey("RoombookingId");

                    b.HasIndex("bookingId");

                    b.HasIndex("roomId");

                    b.ToTable("roomBookings");
                });

            modelBuilder.Entity("hotel_Web_API.models.user", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isFirstBooking")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("phoneNumber")
                        .HasColumnType("int");

                    b.Property<int?>("userType")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("hotel_Web_API.models.Room", b =>
                {
                    b.HasOne("hotel_Web_API.models.branch", "branch")
                        .WithMany("Rooms")
                        .HasForeignKey("branchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");
                });

            modelBuilder.Entity("hotel_Web_API.models.booking", b =>
                {
                    b.HasOne("hotel_Web_API.models.user", "user")
                        .WithMany("bookings")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("hotel_Web_API.models.roomBooking", b =>
                {
                    b.HasOne("hotel_Web_API.models.booking", "booking")
                        .WithMany()
                        .HasForeignKey("bookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hotel_Web_API.models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("roomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("booking");
                });

            modelBuilder.Entity("hotel_Web_API.models.branch", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("hotel_Web_API.models.user", b =>
                {
                    b.Navigation("bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
